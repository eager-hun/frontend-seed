
// -----------------------------------------------------------------------------
// Helper.

@mixin make-grid-item-flex-parent() {
  // As a flex parent.
  display: flex;
  flex-direction: column;

  // The following is here only for the sake of IE11.
  // See https://github.com/philipwalton/flexbugs/issues/75#issuecomment-134702421
  & > * {
    min-height: 1px;
  }
  & > img {
    flex: 0 0 auto;
  }
}

// -----------------------------------------------------------------------------
// Grid root element.

@mixin cheap-grid($wrap: false, $item-classname: cheap-grid__item) {
  @include gap(margin, horizontal, -0.5);

  display: flex;
  flex-direction: row;
  align-items: stretch;

  @if $wrap == (true) {
    flex-wrap: wrap;
  }
  @else {
    flex-wrap: nowrap;
  }

  & > .#{$item-classname} {
    @include gap(padding, horizontal, 0.5);

    flex: 0 1 auto;
  }

  &.flexboxify-items {
    & > .#{$item-classname} {
      @include make-grid-item-flex-parent();
    }
  }
}


// -----------------------------------------------------------------------------
// Grid item width.

@function grid-item-width($item-width, $of-total-cols: $grid-default-column-count) {
  @return 100 / $of-total-cols * $item-width * 1%;
}

@mixin apply-grid-item-width($item-width, $of-total-cols: $grid-default-column-count) {
  width: grid-item-width($item-width, $of-total-cols);
}


// -----------------------------------------------------------------------------
// Wrapping helper.

// Apply on grid root element.
@mixin grid-wrapping-for-cols($n, $item-classname: cheap-grid__item) {
  &:not(.grid-collapsing) > .#{$item-classname} {
    @include gap(margin, top, 1);

    // See http://nth-test.com/
    &:nth-child(-n+#{$n}) {
      margin-top: 0;
    }
  }
}
