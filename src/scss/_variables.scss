/**
 * @file
 * SASS variables.
 */

@import 'sass-tools/functions-color';
@import 'sass-tools/functions-misc';


// #############################################################################
// Typography.

$font-size-default:             16px;
$font-size-bigscreen:           18px;
$line-height-default:           1.6;
$line-height-condensed:         1.3;
$line-height-headings:          1.3;

$font-sans:                     "Roboto",
                                "Helvetica Neue",
                                "Segoe UI",
                                "Calibri Light",
                                "Liberation Sans",
                                "sans-serif";
$font-serif:                    "Times New Roman",
                                "Liberation Serif",
                                "serif";
$font-mono:                     "monospace", "Courier New", "menlo", "monaco";


// #############################################################################
// Layouts 1.

$page-min-width:                 300px;
$content-area-max-width:        1200px;


// #############################################################################
// Media query breakpoints.

/**
|
| LEGEND for the breakpoint variables:
|
| <- $page-min-width                                $content-area-max-width -> |
|                                                                              |
|             <- narrow ->              |              <- wide ->              |
|                                       |                                      |
|   narrow   |   narrow   |   narrow    |    wide    |    wide    |    wide    |
|  lowthird  |  midthird  |  highthird  |  lowthird  |  midthird  |  highthird |
| (narrow-lt)| (narrow-mt)| (narrow-ht) |  (wide-lt) |  (wide-mt) |  (wide-ht) |
*/

$breakpoints: (

  initial:                      0,
  narrow-lt-max:              419px,

  narrow-mt-min:              420px,
  narrow-mt-max:              559px,

  narrow-ht-min:              560px,
  narrow-max:                 759px,

  wide-min:                   760px,
  wide-lt-max:                919px,

  wide-mt-min:                920px,
  wide-mt-max:               1099px,

  wide-ht-min:               1100px,
  wide-max:                  $content-area-max-width
);

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}


// #############################################################################
// Grid-settings.

$grid-default-column-count:     24;
$grid-column-gutters: (
  initial:                      0.75rem,
  wide-min:                     1.5rem,
);


// #############################################################################
// Layouts 2.

$stack-gap-factor-grid-match:   1;
$stack-gap-factor-minor:        1.5;
$stack-gap-factor:              2;
$stack-gap-factor-major:        3;


// #############################################################################
// Colors.

/**
 * See:
 * http://html-color-codes.info/color-names/
 * https://color.adobe.com/create/color-wheel/
 * http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/
 * http://webdesign.tutsplus.com/tutorials/all-you-ever-need-to-know-about-sass-interpolation--cms-21375
 * http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method
 */

// NOTE:
// Prep-colors are just a helper stage to set up the base colors in the final
// color-map below.

$color-brand:                   desaturate(lighten(navy, 25%), 70%);

$prep-color-prim:               $color-brand;
$prep-color-accent-1:           desaturate(magenta, 60%);
$prep-color-accent-2:           desaturate(darken(cyan, 10%), 35%);
$prep-color-blockfill:          #eeeeee;

$prep-color-nav:                $prep-color-prim;
$prep-color-action:             $prep-color-accent-1;

/**
 * READY TO USE COLOR MAP.
 * In the stylesheets, use only this map to refer to colors. It's awesome power.
 * In SASS, only with this one can you have 'variable variable names'.
 *
 * Usage example:
 *
 * @code
 *   .foo {
 *     border-color: color(bar);
 *   }
 * @endcode
 *
 * Find the color() function declaration in ./sass-tools/_functions-color.scss.
*/

$colors: (
  brand:                        $color-brand,
  prim:                         $prep-color-prim,
  accent-1:                     $prep-color-accent-1,
  accent-2:                     $prep-color-accent-2,

  text:                         #484848,
  text-strong:                  #222,
  text-faded:                   #777,

  border:                       #cccccc,
  border-dark:                  #8a8a8a,
  border-light:                 #e6e6e6,

  bg-bright:                    white,
  bg-dark:                      #333,
  blockfill:                    $prep-color-blockfill,

  link:                         mix($prep-color-nav, white, 90%),
  link-visited:                 mix($prep-color-accent-1, white, 90%),
  link-hover:                   mix($prep-color-nav, black, 85%),
  link-visited-hover:           mix($prep-color-accent-1, black, 90%),

  text-invert:                  white,
  link-invert:                  mix($prep-color-accent-2, white, 10%),

  shadow:                       rgba(50, 35, 60, 0.5),

  info:                         mix($prep-color-prim, black, 90%),
  info-light:                   mix($prep-color-prim, white, 10%),
  success:                      mix(seagreen, black, 90%),
  success-light:                mix(seagreen, white, 10%),
  warning:                      mix(darkgoldenrod, black, 70%),
  warning-light:                mix(darkgoldenrod, white, 15%),
  alert:                        mix(crimson, black, 80%),
  alert-light:                  mix(crimson, white, 20%)
);


// #############################################################################
// Asset paths.

// NOTE: asset paths may vary, depending on whether they are handled via Gulp or
// via Webpack.

// The scenarios I can right now imagine happening are:
// - from gulp-generated CSS/JS to static assets,
// - from gulp-generated CSS/JS to processed-via-gulp-task assets,
// - from webpack-generated CSS/JS to webpack-managed dump of assets,
// - from webpack-generated CSS/JS to static assets (don't know how to do that)

// Relative path from the gulp-generated .css files' location to the images.
$path-from-gulp-to-static-images:         '../../../static-assets/images';


// #############################################################################
// CSS effects.

$transition-easing-default:     ease-in-out;

$transition-speed-fast:         125ms;
$transition-speed-semi-fast:    250ms;
$transition-speed-semi-slow:    400ms;
$transition-speed-slow:         700ms;


// #############################################################################
// Forms.

// -----------------------------------------------------------------------------
// Forms' and widgets' dimensions.

$form-font-size: (
  smallforms:                             0.833rem,   // 15px
  default:                                1rem,       // 18px
  bigforms:                               1.3333rem   // 24px
);

$form-widget-oneliner-height: (
  smallforms:                             2.1333em,   // 32px
  default:                                2.3333em,   // 42px
  bigforms:                               2.5em       // 60px
);

$form-items-vertical-gap: (
  smallforms:                             1.4666em,   // 22px
  default:                                1.4444em,   // 26px
  bigforms:                               1.3333em    // 32px
);

$form-input-max-width: (
  smallforms:                             34em,
  default:                                28em,
  bigforms:                               24em,
);

$form-widget-side-padding:                0.75em;
$form-widget-border-radius:               3px;
$form-widget-focus-outline-width:         3px;
$form-arrangement-layout-update-bkp:      wide-mt-min;

// -----------------------------------------------------------------------------
// Widgets' colors.

$form-colors-default: (
  background-color:                       white,
  background-color-error:                 mix(color(alert), white, 7%),
  background-color-disabled:              whitesmoke,

  inset-box-shadow-color:                 rgba(color(shadow), 0.25),
  focus-box-shadow-color:                 mix(color(prim), white, 50%),
  inset-box-shadow-color-error:           rgba(saturate(color(alert), 100%), 0.5),
  focus-box-shadow-color-error:           mix(color(alert), white, 50%),

  border-color:                           silver,
  border-color-focus:                     color(prim),
  border-color-error:                     color(alert),
  border-color-focus-error:               color(alert),
  border-color-disabled:                  lighten(silver, 15%),

  value-color:                            color(text-strong),

  label-color:                            color(text-strong),
  helptext-color:                         color(text-faded),
  errortext-color:                        color(alert),
);

/**
 * NOTE:
 * you need to provide only overrides to the default (in theory (see below)).
 *
 * NOTE:
 * if you override any box shadow:
 * - always declare both `inset` and `focus`
 *
 * NOTE:
 * if you override initial-state values, also redeclare error-state-rules,
 * otherwise error-state-rules would be overwritten, due to specificity.
 */
$form-colors-in-color-zones: (
  blockfill: (
    border-color-disabled:                  darken(silver, 10%),

    inset-box-shadow-color:                 rgba(color(shadow), 0.25),
    focus-box-shadow-color:                 mix(color(prim), white, 50%),
    inset-box-shadow-color-error:           rgba(saturate(color(alert), 100%), 0.5),
    focus-box-shadow-color-error:           mix(color(alert), white, 50%),
  ),
  brand: (
    background-color-error:                 color(warning-light),
    background-color-disabled:              lighten(silver, 10%),

    border-color-error:                     gold,
    border-color-focus-error:               mix(color(warning), white, 80%),
    border-color-disabled:                  darken(silver, 10%),

    inset-box-shadow-color:                 rgba(color(shadow), 0.5),
    focus-box-shadow-color:                 mix(color(prim), white, 50%),
    inset-box-shadow-color-error:           rgba(color(warning), 0.75),
    focus-box-shadow-color-error:           mix(color(warning), white, 66%),

    label-color:                            white,
    helptext-color:                         rgba(white, 0.8),
    errortext-color:                        gold,
  ),
  dark: (
    background-color-error:                 color(warning-light),
    background-color-disabled:              lighten(silver, 10%),

    border-color-error:                     gold,
    border-color-focus-error:               mix(color(warning), white, 80%),
    border-color-disabled:                  darken(silver, 5%),

    inset-box-shadow-color:                 rgba(color(shadow), 0.75),
    focus-box-shadow-color:                 mix(color(prim), white, 50%),
    inset-box-shadow-color-error:           rgba(color(warning), 0.75),
    focus-box-shadow-color-error:           mix(color(warning), white, 60%),

    label-color:                            white,
    helptext-color:                         rgba(white, 0.6),
    errortext-color:                        gold
  )
);


// -----------------------------------------------------------------------------
// Buttons' colors:

$button-colors: (
  primary: (
    background-color:               color(prim),
    background-color-hover:         mix(color(prim), black, 73%),
    background-color-disabled:      mix(color(prim), white, 50%),
    color:                          white,
    color-disabled:                 white,
    text-shadow-color:              rgba(black, 0.33)
  ),
  accent-1: (
    background-color:               color(accent-1),
    background-color-hover:         mix(color(accent-1), black, 80%),
    background-color-disabled:      mix(color(accent-1), white, 50%),
    color:                          white,
    color-disabled:                 white,
    text-shadow-color:              rgba(black, 0.33)
  ),
  accent-2: (
    background-color:               color(accent-2),
    background-color-hover:         mix(color(accent-2), black, 80%),
    background-color-disabled:      mix(color(accent-2), white, 50%),
    color:                          white,
    color-disabled:                 white,
    text-shadow-color:              rgba(black, 0.33)
  ),
  gray: (
    background-color:               darken(whitesmoke, 10%),
    background-color-hover:         darken(whitesmoke, 6%),
    background-color-disabled:      whitesmoke,
    color:                          color(text),
    color-disabled:                 lighten(color(text), 33%),
    text-shadow-color:              rgba(white, 0.75)
  )
);
